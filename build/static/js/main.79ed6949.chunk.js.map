{"version":3,"sources":["components/layout/Navbar.js","pages/Login.js","pages/Signup.js","pages/Logout.js","MinesServer.js","utils.js","components/GamesList.js","components/NewGame.js","pages/Game.js","components/Cell.js","pages/Board.js","App.js","index.js"],"names":["Navbar","useState","isAuth","setIsAuth","useEffect","localStorage","getItem","to","Login","email","setEmail","password","setPassword","errors","setErrors","loading","setLoading","window","location","replace","onSubmit","e","preventDefault","user","axios","method","url","headers","data","JSON","stringify","then","response","key","clear","setItem","htmlFor","name","type","value","required","onChange","target","Signup","password1","setPassword1","password2","setPassword2","Logout","onClick","Authorization","interceptors","use","error","status","Promise","reject","responseErrorHandler","deleteGameFromBackend","gameId","createGameInBackend","newGameData","useremail","rows","columns","mines","saveGameInBackend","state","state_board","state_board_json","console","log","catchErrors","fn","catch","err","GameList","props","gamelist","setgamelist","a","gamesFromBackend","fetchData","propForceUpdate","map","game","i","id","gameState","start_str_ser","alert","onGameListChange","deleteGame","className","NewGameForm","formValues","setFormValues","handleChange","evt","updateFormValues","createInBackend","userEmail","createdGame","createGame","Game","setUserEmail","forceUpdate","setForceUpdate","LoggedUser","handleGameListChange","NewGame","Cell","cellData","isRevealed","isMine","isFlagged","onContextMenu","contextMenu","nearbyMines","StyledGame","styled","div","Board","useParams","setGame","gameData","setGameData","gameFromBackend","won","lost","board","Array","row","column","childen_key","isEmpty","updatedBoard","nerbyMines","getNearbyCells","reduce","previousValue","current","calculateNearbyMines","createMines","initboard","parse","mineRow","mineColumn","minesCreated","Math","floor","random","revealBoard","cell","revealEmptyCell","nearbyCells","push","boardToArrayOfCells","cellsArray","handleCellClick","saveOnBackend","handleContextMenu","mineArray","FlagArray","newGameState","savedData","saveData","datarow","revealed","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LA0CeA,EAvCA,WAAO,IAAD,EACSC,oBAAS,GADlB,mBACZC,EADY,KACJC,EADI,KASnB,OANAC,qBAAU,WAC8B,OAAlCC,aAAaC,QAAQ,UACvBH,GAAU,KAEX,IAGD,gCACE,6CACA,8BACc,IAAXD,EACC,eAAC,WAAD,WACG,IACD,6BACE,cAAC,IAAD,CAAMK,GAAG,QAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,UAAT,yBAIJ,eAAC,WAAD,WACG,IACD,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,UAAT,+B,gBC6CCC,EA5ED,WAAO,IAAD,EACQP,mBAAS,IADjB,mBACXQ,EADW,KACJC,EADI,OAEcT,mBAAS,IAFvB,mBAEXU,EAFW,KAEDC,EAFC,OAGUX,oBAAS,GAHnB,mBAGXY,EAHW,KAGHC,EAHG,OAIYb,oBAAS,GAJrB,mBAIXc,EAJW,KAIFC,EAJE,KAMlBZ,qBAAU,WAC8B,OAAlCC,aAAaC,QAAQ,SACvBW,OAAOC,SAASC,QAAQ,8BAExBH,GAAW,KAEZ,IAiCH,OACE,iCACe,IAAZD,GAAqB,wCACV,IAAXF,GAAmB,0EACP,IAAZE,GACC,uBAAMK,SApCK,SAAAC,GACfA,EAAEC,iBAEF,IAAMC,EAAO,CACXd,MAAOA,EACPE,SAAUA,GAGZa,IAAM,CACJC,OAAQ,OACRC,IAAK,yEACLC,QAAS,CACP,eAAe,oBAEjBC,KAAMC,KAAKC,UAAUP,KAEpBQ,MAAK,SAAAC,GAAQ,OAAIA,EAASJ,QAC1BG,MAAK,SAAAH,GACAA,EAAKK,KACP5B,aAAa6B,QACb7B,aAAa8B,QAAQ,QAASP,EAAKK,KACnChB,OAAOC,SAASC,QAAQ,gCAExBT,EAAS,IACTE,EAAY,IACZP,aAAa6B,QACbpB,GAAU,QAUZ,UACE,uBAAOsB,QAAQ,QAAf,4BADF,IACgD,uBAC9C,uBACEC,KAAK,QACLC,KAAK,QACLC,MAAO9B,EACP+B,UAAQ,EACRC,SAAU,SAAApB,GAAC,OAAIX,EAASW,EAAEqB,OAAOH,UAChC,IACH,uBACA,uBAAOH,QAAQ,WAAf,uBAVF,IAU8C,uBAC5C,uBACEC,KAAK,WACLC,KAAK,WACLC,MAAO5B,EACP6B,UAAQ,EACRC,SAAU,SAAApB,GAAC,OAAIT,EAAYS,EAAEqB,OAAOH,UACnC,IACH,uBACA,uBAAOD,KAAK,SAASC,MAAM,iBCkBtBI,EAtFA,WAAO,IAAD,EACO1C,mBAAS,IADhB,mBACZQ,EADY,KACLC,EADK,OAEeT,mBAAS,IAFxB,mBAEZ2C,EAFY,KAEDC,EAFC,OAGe5C,mBAAS,IAHxB,mBAGZ6C,EAHY,KAGDC,EAHC,OAIS9C,oBAAS,GAJlB,mBAIZY,EAJY,KAIJC,EAJI,OAKWb,oBAAS,GALpB,mBAKZc,EALY,KAKHC,EALG,KAOnBZ,qBAAU,WAC8B,OAAlCC,aAAaC,QAAQ,SACvBW,OAAOC,SAASC,QAAQ,8BAExBH,GAAW,KAEZ,IAmCH,OACE,iCACe,IAAZD,GAAqB,yCACV,IAAXF,GAAmB,yEACpB,uBAAMO,SArCO,SAAAC,GACfA,EAAEC,iBAEF,IAAMC,EAAO,CACXd,MAAOA,EACPmC,UAAWA,EACXE,UAAWA,GAGbtB,IAAM,CACJC,OAAQ,OACRC,IAAK,4EACLC,QAAS,CACP,eAAe,oBAEjBC,KAAMC,KAAKC,UAAUP,KAEpBQ,MAAK,SAAAC,GAAQ,OAAIA,EAASJ,QAC1BG,MAAK,SAAAH,GACAA,EAAKK,KACP5B,aAAa6B,QACb7B,aAAa8B,QAAQ,QAASP,EAAKK,KACnChB,OAAOC,SAASC,QAAQ,gCAExBT,EAAS,IACTmC,EAAa,IACbE,EAAa,IACb1C,aAAa6B,QACbpB,GAAU,QASd,UACE,uBAAOsB,QAAQ,QAAf,4BADF,IACgD,uBAC9C,uBACEC,KAAK,QACLC,KAAK,QACLC,MAAO9B,EACPgC,SAAU,SAAApB,GAAC,OAAIX,EAASW,EAAEqB,OAAOH,QACjCC,UAAQ,IACP,IACH,uBACA,uBAAOJ,QAAQ,YAAf,uBAVF,IAU+C,uBAC7C,uBACEC,KAAK,YACLC,KAAK,WACLC,MAAOK,EACPH,SAAU,SAAApB,GAAC,OAAIwB,EAAaxB,EAAEqB,OAAOH,QACrCC,UAAQ,IACP,IACH,uBACA,uBAAOJ,QAAQ,YAAf,+BAnBF,IAmBuD,uBACrD,uBACEC,KAAK,YACLC,KAAK,WACLC,MAAOO,EACPL,SAAU,SAAApB,GAAC,OAAI0B,EAAa1B,EAAEqB,OAAOH,QACrCC,UAAQ,IACP,IACH,uBACA,uBAAOF,KAAK,SAASC,MAAM,kBCpBpBS,EA5DA,WAAO,IAAD,EACW/C,oBAAS,GADpB,mBACZc,EADY,KACHC,EADG,KAGnBZ,qBAAU,WAC6B,MAAjCC,aAAaC,QAAQ,SACvBW,OAAOC,SAASC,QAAQ,+BAExBH,GAAW,KAEZ,IAuCH,OACE,+BACe,IAAZD,GACC,qCACE,kEACA,uBAAOuB,KAAK,SAASC,MAAM,SAASU,QA1CvB,SAAA5B,GACnBA,EAAEC,iBAEFE,IAAM,CACJC,OAAQ,OACRC,IAAK,0EACLC,QAAS,CACLuB,cAAc,SAAD,OAAW7C,aAAaC,QAAQ,UAC7C,eAAe,sBAGpByB,MAAK,SAAAC,GAAQ,OAAIA,EAASJ,QACxBG,MAAK,SAAAH,GACJvB,aAAa6B,QACbjB,OAAOC,SAASC,QAAQ,kCAiB5BK,IAAM2B,aAAanB,SAASoB,KAC1B,SAAApB,GAAQ,OAA2BA,KACnC,SAAAqB,GAAK,OAXsB,SAAAA,GAM3B,OAL8B,MAA1BA,EAAMrB,SAASsB,SACjBjD,aAAa6B,QACbjB,OAAOC,SAASC,QAAQ,gCAGnBoC,QAAQC,OAAOH,GAKbI,CAAqBJ,e,wBCetBK,EAAwB,SAAEC,GACpC,OAAOnC,IAAM,CACTC,OAAQ,SACRC,IAAI,oEAAD,OAAsEiC,GACzEhC,QAAS,CACPuB,cAAc,SAAD,OAAW7C,aAAaC,QAAQ,UAC7C,eAAe,uBAUZsD,EAAsB,SAAEC,GACjC,OAAOrC,IAAM,CACTC,OAAQ,OACRC,IAAI,oEACJC,QAAS,CACPuB,cAAc,SAAD,OAAW7C,aAAaC,QAAQ,UAC7C,eAAe,oBAEjBsB,KAAMC,KAAKC,UAAU,CACjBgC,UAAWD,EAAYC,UACvBC,KAAMF,EAAYE,KAClBC,QAASH,EAAYG,QACrBC,MAAOJ,EAAYI,UAGtBlC,MAAK,SAAAC,GAAQ,OAAIA,EAASJ,SAUtBsC,EAAoB,SAACP,EAAQQ,EAAOC,GAE7C,IAAMC,EAAmBxC,KAAKC,UAAUsC,GAExC,OADAE,QAAQC,IAAIF,GACL7C,IAAM,CACTC,OAAQ,MACRC,IAAI,oEAAD,OAAsEiC,EAAtE,KACHhC,QAAS,CACPuB,cAAc,SAAD,OAAW7C,aAAaC,QAAQ,UAC7C,eAAe,oBAEjBsB,KAAMC,KAAKC,UAAU,CACjBqC,QACAC,YAAaC,MAGhBtC,MAAK,SAAAC,GAAQ,OAAIA,EAASJ,SCjHrB4C,EAAc,SAAAC,GACxB,OAAO,WACH,OAAOA,EAAE,WAAF,aAAaC,OAAM,SAACC,GACvBL,QAAQjB,MAAMsB,Q,QC4DXC,EA7DE,SAAEC,GAAY,IAAD,EACI5E,mBAAS,IADb,mBACrB6E,EADqB,KACXC,EADW,OAEE9E,oBAAS,GAFX,mBAErBc,EAFqB,KAEZC,EAFY,KAI5BZ,qBAAU,WAORoE,EALe,uCAAG,4BAAAQ,EAAA,sEFAXxD,IAAM,CACTC,OAAQ,MACRC,IAAK,oEACLC,QAAS,CACPuB,cAAc,SAAD,OAAW7C,aAAaC,QAAQ,UAC7C,eAAe,sBAGhByB,MAAK,SAAAC,GAAQ,OAAIA,EAASJ,QERb,OACVqD,EADU,OAEhBF,EAAYE,GACZjE,GAAW,GAHK,2CAAH,oDAKHkE,MAEX,CAACL,EAAMM,kBACVb,QAAQC,IAAIO,GACZR,QAAQC,IAAIM,EAAMM,iBAyBlB,OACE,+BACe,IAAZpE,GAAqB+D,GACpB,mCACGA,EAASM,KAAI,SAACC,EAAMC,GAAP,OACZ,gCACE,cAAC,IAAD,CAAM/E,GAAE,iBAAY8E,EAAKE,IAAzB,oBAnBaC,EAoBSH,EAAKlB,MAnBnB,gBAAdqB,EACK,aACgB,YAAdA,EACF,eACgB,SAAdA,EACF,kBACgB,QAAdA,EACF,iBAGF,yBAQG,aACsCH,EAAKE,GAD3C,OADF,qBAIiBF,EAAKI,cAJtB,kBAI6CJ,EAAKtB,KAJlD,kBAIgEsB,EAAKrB,QAJrE,yBAI6FqB,EAAKpB,MAJlG,UAKE,wBAAQhB,QAAS,kBAjCFU,EAiCwB0B,EAAKE,QA1BtDf,EANgB,uCAAG,sBAAAQ,EAAA,sEACatB,EAAuBC,GADpC,cAEjB+B,MAAM,gBACNb,EAAMc,mBAHW,2CAAH,oDAMJC,IAPW,IAAEjC,GAiCf,SACE,cAAC,IAAD,CAAUkC,UAAU,yBANdR,EAAKE,IAlBD,IAACC,U,gBCsDZM,EAtFK,SAACjB,GAAW,IAAD,EACS5E,mBAAS,CACzC8D,KAAM,EACNC,QAAS,EACTC,MAAO,IAJgB,mBACpB8B,EADoB,KACRC,EADQ,KAOrBC,EAAe,SAAAC,GACjB,IAAMC,EAAgB,2BACfJ,GADe,kBAEjBG,EAAIxD,OAAO6C,GAAKW,EAAIxD,OAAOH,QAGhCyD,EAAcG,IAeZC,EAAkB,WACpB,IAAIvC,EAAc,CACdC,UAAWe,EAAMwB,UACjBtC,KAAMgC,EAAWhC,KACjBC,QAAS+B,EAAW/B,QACpBC,MAAO8B,EAAW9B,OAQtBO,EANgB,uCAAG,4BAAAQ,EAAA,sEACWpB,EAAoBC,GAD/B,OACTyC,EADS,OAEfhC,QAAQC,IAAI,oBACZD,QAAQC,IAAI+B,GAHG,2CAAH,oDAMJC,KAGhB,OAAQ,qCACJ,2DACA,uBAAMnF,SA9BW,SAAA8E,GACjBA,EAAI5E,iBACAyE,EAAW9B,MAAS8B,EAAW/B,QAAU+B,EAAWhC,KAAQ,EAC5D2B,MAAM,qCAAD,OAAsCK,EAAW9B,MAAjD,4BAA0E8B,EAAWhC,KAArF,cAA+FgC,EAAW/B,QAA1G,YAELoC,IACAvB,EAAMc,mBACND,MAAM,oBAuBV,UACI,uBAAOtD,QAAQ,OAAf,kBACA,yBAAQmD,GAAG,OAAOhD,MAAQwD,EAAU,KAAUtD,SAAUwD,EAAxD,UAEI,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,0CAEJ,uBAAO7D,QAAQ,UAAf,qBACA,yBAAQmD,GAAG,UAAUhD,MAAQwD,EAAU,QAAatD,SAAUwD,EAA9D,UACI,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,0CAEJ,uBAAO7D,QAAQ,QAAf,mBACA,yBAAQmD,GAAG,QAAQhD,MAAQwD,EAAU,MAAWtD,SAAUwD,EAA1D,UACI,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,0CAEJ,4DCrCGO,EA1CF,WAAO,IAAD,EACiBvG,mBAAS,IAD1B,mBACVoG,EADU,KACCI,EADD,OAEaxG,oBAAS,GAFtB,mBAEVc,EAFU,KAEDC,EAFC,OAGqBf,mBAAS,GAH9B,mBAGVyG,EAHU,KAGGC,EAHH,KAKjBvG,qBAAU,WAC8B,OAAlCC,aAAaC,QAAQ,SACvBW,OAAOC,SAASC,QAAQ,+BASxBqD,EANe,uCAAG,4BAAAQ,EAAA,sEJebxD,IAAM,CACTC,OAAQ,MACRC,IAAK,wEACLC,QAAS,CACPuB,cAAc,SAAD,OAAW7C,aAAaC,QAAQ,UAC7C,eAAe,sBAGhByB,MAAK,SAAAC,GAAQ,OAAIA,EAASJ,QIvBX,OACRgF,EADQ,OAEdH,EAAaG,EAAWnG,OACxBO,GAAW,GAHG,2CAAH,oDAMHkE,MAIb,IAEH,IAAM2B,EAAuB,WAC3BF,EAAeD,EAAY,IAG7B,OACE,+BACe,IAAZ3F,GACC,qCACE,uCACA,cAAC+F,EAAD,CAAaT,UAAWA,EAAWV,iBAAkB,kBAAMkB,OAC3D,wCAAWR,EAAX,mBAGA,cAAC,EAAD,CAAUlB,gBAAiBuB,EAAaf,iBAAkB,kBAAMkB,a,QCH3DE,EA/BF,SAAClC,GAGV,IAeIgB,EAAY,QAAUhB,EAAMmC,SAASC,WAAa,GAAK,YAAcpC,EAAMmC,SAASE,OAAS,WAAa,KAAOrC,EAAMmC,SAASG,UAAY,WAAa,IAE7J,OAKI,aAJA,CAIA,OAAKtB,UAAWA,EAAW5C,QAAS4B,EAAM5B,QAASmE,cAAevC,EAAMwC,YAAxE,SAnBKxC,EAAMmC,SAASC,WAGhBpC,EAAMmC,SAASE,OACR,cAAC,IAAD,CAASrB,UAAU,qBAEI,IAA/BhB,EAAMmC,SAASM,YACP,KAEJzC,EAAMmC,SAASM,YARXzC,EAAMmC,SAASG,UAAY,cAAC,IAAD,CAAStB,UAAU,qBAAwB,QCNnF0B,EAAaC,IAAOC,IAAV,wEAAGD,CAAH,uEAEC,SAAA3C,GAAK,OAAqB,GAAhBA,EAAMb,WA+WlB0D,EAzWD,WAAO,IACTnC,EAAOoC,cAAPpC,GADQ,EAEQtF,mBAAS,IAFjB,mBAEToF,EAFS,KAEHuC,EAFG,OAGgB3H,mBAAS,IAHzB,mBAGT4H,EAHS,KAGCC,EAHD,OAIc7H,oBAAS,GAJvB,mBAITc,EAJS,KAIAC,EAJA,OAKsBf,mBAAS,GAL/B,mBAKTyG,EALS,KAKIC,EALJ,KAOhBvG,qBAAU,WAONoE,EALe,uCAAG,4BAAAQ,EAAA,sENsBUrB,EMrB0B4B,ENsBnD/D,IAAM,CACTC,OAAQ,MACRC,IAAI,oEAAD,OAAsEiC,GACzEhC,QAAS,CACPuB,cAAc,SAAD,OAAW7C,aAAaC,QAAQ,UAC7C,eAAe,sBAGhByB,MAAK,SAAAC,GAAQ,OAAIA,EAASJ,QM/BT,OACRmG,EADQ,OAEdH,EAAQG,GAFM,iCNsBQ,IAAEpE,IMtBV,OAAH,oDAKHuB,MAEb,CAACK,IAGJnF,qBAAU,WAsDN,GAAmB,gBAAfiF,EAAKlB,MAAyB,CAC9B,IAGMN,EAAc,CAChBmE,KAAK,EACLC,MAAM,EACNC,MAlCU,SAACnE,EAAMC,EAASC,GAI9B,IAFA,IAAIiE,EAAO,IAAIC,MAAMpE,GAEZqE,EAAK,EAAGA,EAAMrE,EAAMqE,IAAO,CAChCF,EAAME,GAAO,IAAID,MAAMnE,GACvB,IAAK,IAAIqE,EAAQ,EAAGA,EAASrE,EAASqE,IAClCH,EAAME,GAAKC,GAAU,CACjBC,YAAW,WAAOF,EAAP,YAAcC,EAAd,KACXD,MACAC,SACAnB,QAAQ,EACRI,YAAa,EACbL,YAAY,EACZsB,SAAS,EACTpB,WAAW,GASvB,OAlDyB,SAACe,EAAOnE,EAAMC,GAGvC,IAFA,IAAIwE,EAAeN,EAEVE,EAAK,EAAGA,EAAMrE,EAAMqE,IACzB,IAAK,IAAIC,EAAQ,EAAGA,EAASrE,EAASqE,IAClC,IAAkC,IAA9BH,EAAME,GAAKC,GAAQnB,OAAgB,CACnC,IAEIuB,EAFgBC,EAAeN,EAAIC,EAAQtE,EAAMC,EAASkE,GAEjCS,QAAQ,SAACC,EAAgBC,GAClD,OAAIA,EAAQ3B,OACD0B,EAAgB,EAEhBA,IAEZ,GAEe,IAAdH,IACAD,EAAaJ,GAAKC,GAAQE,SAAU,GAExCC,EAAaJ,GAAKC,GAAQf,YAAcmB,EAIpD,OAAQD,EAyBCM,CAFTZ,EAAQa,EAAYb,EAAOnE,EAAMC,EAASC,GAELF,EAAMC,GAYhCgF,CANE3D,EAAKtB,KACFsB,EAAKrB,QACPqB,EAAKpB,QAMnB6D,EAAYjE,QACT,GAAmB,YAAfwB,EAAKlB,MAAqB,CACjC,IAAMN,EAAc,CAChBmE,KAAK,EACLC,MAAM,EACNC,MAAOrG,KAAKoH,MAAM5D,EAAKjB,cAE3B0D,EAAYjE,QACT,GAAmB,QAAfwB,EAAKlB,MAAiB,CAC7B,IAAMN,EAAc,CAChBmE,KAAK,EACLC,MAAM,EACNC,MAAOrG,KAAKoH,MAAM5D,EAAKjB,cAE3B0D,EAAYjE,QACT,GAAmB,SAAfwB,EAAKlB,MAAkB,CAC9B,IAAMN,EAAc,CAChBmE,KAAK,EACLC,MAAM,EACNC,MAAOrG,KAAKoH,MAAM5D,EAAKjB,cAE3B0D,EAAYjE,GAEhB7C,GAAW,KACb,CAACqE,IAEH,IAuLmB6C,EAAa/C,EAvL1B4D,EAAc,SAACb,EAAOnE,EAAMC,EAASC,GAEvC,IADA,IAAIiF,EAASC,EAAYC,EAAe,EACjCA,EAAenF,GAClBiF,EAAUG,KAAKC,MAAMD,KAAKE,SAAWxF,GACrCoF,EAAaE,KAAKC,MAAMD,KAAKE,SAAWvF,GAClCkE,EAAMgB,GAASC,GAAYjC,SAC7BgB,EAAMgB,GAASC,GAAYjC,QAAS,EACpCkC,KAIR,OAAQlB,GAGNsB,EAAc,WAChBlF,QAAQC,IAAI,eACZ,IAAIV,EAAcgE,EAClBhE,EAAYqE,MAAM9C,KAAI,SAACgD,GACnBA,EAAIhD,KAAI,SAACqE,GACLA,EAAKxC,YAAa,QAI1BN,EAAeD,EAAY,GAC3BoB,EAAYjE,IAGV6F,EAAkB,SAAlBA,EAAmBtB,EAAKC,EAAQtE,EAAMC,EAASkE,GAWjD,OAVoBQ,EAAeN,EAAIC,EAAQtE,EAAMC,EAASkE,GAClD9C,KAAK,SAAAqE,GACRA,EAAKxC,aAAewC,EAAKlB,SAAYkB,EAAKvC,SAC3CgB,EAAMuB,EAAKrB,KAAKqB,EAAKpB,QAAQpB,YAAa,EAC1CiB,EAAMuB,EAAKrB,KAAKqB,EAAKpB,QAAQlB,WAAY,EACrCsC,EAAKlB,SACLmB,EAAgBD,EAAKrB,IAAKqB,EAAKpB,OAAQtE,EAAMC,EAASkE,OAI3DA,GAGLQ,EAAiB,SAACN,EAAIC,EAAQtE,EAAMC,EAASkE,GAC/C,IAAMyB,EAAc,GAoBpB,OAlBKvB,EAAM,GAAGuB,EAAYC,KAAK1B,EAAME,EAAI,GAAGC,IAExCD,EAAMrE,EAAO,GAAI4F,EAAYC,KAAK1B,EAAME,EAAI,GAAGC,IAE/CA,EAAS,GAAKsB,EAAYC,KAAK1B,EAAME,GAAKC,EAAS,IAEnDA,EAASrE,EAAU,GAAI2F,EAAYC,KAAK1B,EAAME,GAAKC,EAAS,IAE3DD,EAAM,GAAKC,EAAS,GAAIsB,EAAYC,KAAK1B,EAAME,EAAM,GAAGC,EAAS,IAEjED,EAAM,GAAKC,EAASrE,EAAU,GAAI2F,EAAYC,KAAK1B,EAAME,EAAM,GAAGC,EAAS,IAE3ED,EAAMrE,EAAO,GAAKsE,EAAS,GAAIsB,EAAYC,KAAK1B,EAAME,EAAM,GAAGC,EAAS,IAGxED,EAAMrE,EAAO,GAAMsE,EAASrE,EAAU,GACvC2F,EAAYC,KAAK1B,EAAME,EAAM,GAAGC,EAAS,IAErCsB,GAINE,EAAsB,SAAC3B,GACrB,IAAI4B,EAAa,GAUjB,OARA5B,EAAM9C,KAAI,SAAAgD,GACNA,EAAIhD,KAAI,SAACqE,GACAA,EAAKxC,YACN6C,EAAWF,KAAKH,SAKrBK,GA8BTC,EAAkB,SAAC3B,EAAKC,GAC1B,IAAMtE,EAAOsB,EAAKtB,KACZC,EAAUqB,EAAKrB,QACfC,EAAQoB,EAAKpB,MACf+D,GAAM,EACNC,GAAO,EAEX,GAAIJ,EAASK,MAAME,GAAKC,GAAQpB,WAAY,OAAO,KAG/CY,EAASK,MAAME,GAAKC,GAAQnB,SAC5BsC,IACA9D,MAAM,aACNuC,GAAO,GAIX,IA5CyBC,EA4CrBrE,EAAcgE,EAClBhE,EAAYqE,MAAME,GAAKC,GAAQlB,WAAY,EAC3CtD,EAAYqE,MAAME,GAAKC,GAAQpB,YAAa,EAExCpD,EAAYqE,MAAME,GAAKC,GAAQE,UAC/B1E,EAAYqE,MAAQwB,EAAgBtB,EAAKC,EAAOtE,EAAMC,EAASH,EAAYqE,QAjDtDA,EAoDDrE,EAAYqE,MAlDnB2B,EAAoB3B,GACbS,QAAQ,SAACC,EAAgBC,GAC7C,OAAKA,EAAQ5B,WAGF2B,EAFAA,EAAgB,IAI5B,KA2C4C3E,IAC3C+D,GAAM,EACNwB,IACA9D,MAAM,YAGV7B,EAAYmE,IAAMA,EAClBnE,EAAYoE,KAAOA,EACnBH,EAAYjE,GACZmG,IACArD,EAAeD,EAAY,IAIzBuD,EAAoB,SAAC/D,EAAIkC,EAAKC,GAChCnC,EAAI5E,iBACJgD,QAAQC,IAAI,qBACZ,IAxD0B2D,EAwDpBjE,EAAQoB,EAAKpB,MACfJ,EAAcgE,EACdG,GAAM,EAGV,GAAInE,EAAYqE,MAAME,GAAKC,GAAQpB,WAAY,OAAO,KAQtD,GANIpD,EAAYqE,MAAME,GAAKC,GAAQlB,UAC/BtD,EAAYqE,MAAME,GAAKC,GAAQlB,WAAY,EAE3CtD,EAAYqE,MAAME,GAAKC,GAAQlB,WAAY,EAlErBe,EAqEDrE,EAAYqE,MAnEpB2B,EAAoB3B,GACbS,QAAQ,SAACC,EAAgBC,GAC7C,OAAIA,EAAQ1B,UACDyB,EAAgB,EAEhBA,IAEZ,KA4D6C3E,EAAO,CACnD,IAAMiG,EAAYL,EAAoBhG,EAAYqE,OAAO9C,KAAK,SAAAqE,GAC1D,GAAIA,EAAKvC,OAAQ,OAAOuC,KAEtBU,EAAYN,EAAoBhG,EAAYqE,OAAO9C,KAAK,SAAAqE,GAC1D,GAAIA,EAAKtC,UAAW,OAAOsC,MAG/BzB,EAAQnG,KAAKC,UAAUoI,KAAerI,KAAKC,UAAUqI,MAEjDX,IACA9D,MAAM,YAGd7B,EAAYmE,IAAMA,EAClBF,EAAYjE,GACZmG,IACArD,EAAeD,EAAY,IAwBzBsD,EAAgB,WAClB,IAAII,EAAe,GAEfA,EADAvC,EAASG,IACM,MACRH,EAASI,KACD,OAEA,UAQnBzD,EALc,uCAAG,4BAAAQ,EAAA,sEACWd,EAAkBmB,EAAKE,GAAI6E,EAAcvC,EAASK,OAD7D,OACPmC,EADO,OAEb/F,QAAQC,IAAI8F,GAFC,2CAAH,oDAKFC,KAGhB,OACI,+BACe,IAAZvJ,GACC,mCAEQ8G,GACI,cAACN,EAAD,CAAYvD,QAASqB,EAAKrB,QAA1B,SACI,sBAAK6B,UAAU,QAAf,UACA,sBAAKA,UAAU,YAAf,UACI,uBAAMA,UAAU,OAAhB,mBAA8BR,EAAKE,GAAnC,WAA+CF,EAAKpB,SAAa,uBACjE,sBAAM4B,UAAU,OAAhB,SAAwBgC,EAASG,IAAM,WAAa,KACpD,sBAAMnC,UAAU,OAAhB,SAAwBgC,EAASI,KAAO,YAAc,QAGtDJ,GAAYA,EAASK,QApD9BA,EAqDuBL,EAASK,MAAO7C,EAAKtB,KArD/BoB,EAqDqCuB,EAnDjEpC,QAAQC,IAAR,qBAA0BY,EAA1B,MACAb,QAAQC,IAAI2D,GACLA,EAAM9C,KAAI,SAACmF,GACd,OAAOA,EAAQnF,KAAI,SAAC4B,GAChB,OACI,8BACI,cAAC,EAAD,CACIA,SAAUA,EACVwD,SAAUxD,EAASC,WACnBhE,QAAS,kBAAK8G,EAAgB/C,EAASoB,IAAKpB,EAASqB,SACrDhB,YAAa,SAACnB,GAAD,OAAQ+D,EAAkB/D,EAAKc,EAASoB,IAAKpB,EAASqB,YAL3E,UAAarB,EAASsB,+BCrR3BmC,EA5BH,WACV,OACE,qBAAK5E,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6E,KAAK,SAASC,OAAK,EAA1B,SACG,cAAC,EAAD,MAGH,cAAC,IAAD,CAAOD,KAAK,UAAUC,OAAK,EAA3B,SACG,cAAC,EAAD,MAEH,cAAC,IAAD,CAAOD,KAAK,UAAUC,OAAK,EAA3B,SACG,cAAC,EAAD,MAEH,cAAC,IAAD,CAAOD,KAAK,QAAQC,OAAK,EAAzB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,aAAZ,SACE,cAAC,EAAD,e,MCxBZE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.79ed6949.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  const [isAuth, setIsAuth] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem('token') !== null) {\n      setIsAuth(true);\n    }\n  }, []);\n\n  return (\n    <nav>\n      <h1>Minesweeper</h1>\n      <ul>\n        {isAuth === true ? (\n          <Fragment>\n            {' '}\n            <li>\n              <Link to='/game'>Games</Link>\n            </li>\n            <li>\n              <Link to='/logout'>Logout</Link>\n            </li>\n          </Fragment>\n        ) : (\n          <Fragment>\n            {' '}\n            <li>\n              <Link to='/login'>Login</Link>\n            </li>\n            <li>\n              <Link to='/signup'>Signup</Link>\n            </li>\n          </Fragment>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (localStorage.getItem('token') !== null) {\n      window.location.replace('http://localhost:3000/game');\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const user = {\n      email: email,\n      password: password\n    };\n\n    axios({\n      method: 'post',\n      url: 'http://djminesbackend.respuestadigital.com.ar/api/v1/users/auth/login/',\n      headers: {\n        'Content-Type':'application/json'\n      },\n      data: JSON.stringify(user)\n    })\n      .then(response => response.data)\n      .then(data => {\n        if (data.key) {\n          localStorage.clear();\n          localStorage.setItem('token', data.key);\n          window.location.replace('http://localhost:3000/game');\n        } else {\n          setEmail('');\n          setPassword('');\n          localStorage.clear();\n          setErrors(true);\n        }\n      });\n  };\n\n  return (\n    <div>\n      {loading === false && <h1>Login</h1>}\n      {errors === true && <h2>Cannot log in with provided credentials</h2>}\n      {loading === false && (\n        <form onSubmit={onSubmit}>\n          <label htmlFor='email'>Email address:</label> <br />\n          <input\n            name='email'\n            type='email'\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n          />{' '}\n          <br />\n          <label htmlFor='password'>Password:</label> <br />\n          <input\n            name='password'\n            type='password'\n            value={password}\n            required\n            onChange={e => setPassword(e.target.value)}\n          />{' '}\n          <br />\n          <input type='submit' value='Login' />\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Signup = () => {\n  const [email, setEmail] = useState('');\n  const [password1, setPassword1] = useState('');\n  const [password2, setPassword2] = useState('');\n  const [errors, setErrors] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (localStorage.getItem('token') !== null) {\n      window.location.replace('http://localhost:3000/game');\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const user = {\n      email: email,\n      password1: password1,\n      password2: password2\n    };\n\n    axios({\n      method: 'post',\n      url: 'http://djminesbackend.respuestadigital.com.ar/api/v1/users/auth/register/',\n      headers: {\n        'Content-Type':'application/json'\n      },\n      data: JSON.stringify(user)\n    })\n      .then(response => response.data)\n      .then(data => {\n        if (data.key) {\n          localStorage.clear();\n          localStorage.setItem('token', data.key);\n          window.location.replace('http://localhost:3000/game');\n        } else {\n          setEmail('');\n          setPassword1('');\n          setPassword2('');\n          localStorage.clear();\n          setErrors(true);\n        }\n      });\n  };\n\n  return (\n    <div>\n      {loading === false && <h1>Signup</h1>}\n      {errors === true && <h2>Cannot signup with provided credentials</h2>}\n      <form onSubmit={onSubmit}>\n        <label htmlFor='email'>Email address:</label> <br />\n        <input\n          name='email'\n          type='email'\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          required\n        />{' '}\n        <br />\n        <label htmlFor='password1'>Password:</label> <br />\n        <input\n          name='password1'\n          type='password'\n          value={password1}\n          onChange={e => setPassword1(e.target.value)}\n          required\n        />{' '}\n        <br />\n        <label htmlFor='password2'>Confirm password:</label> <br />\n        <input\n          name='password2'\n          type='password'\n          value={password2}\n          onChange={e => setPassword2(e.target.value)}\n          required\n        />{' '}\n        <br />\n        <input type='submit' value='Signup' />\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Logout = () => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (localStorage.getItem('token') == null) {\n      window.location.replace('http://localhost:3000/login');\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const handleLogout = e => {\n    e.preventDefault();\n\n    axios({\n      method: 'post',\n      url: 'http://djminesbackend.respuestadigital.com.ar/api/v1/users/auth/logout/',\n      headers: {\n          Authorization: `Token ${localStorage.getItem('token')}`,\n          'Content-Type':'application/json'\n      }\n    })\n    .then(response => response.data)\n      .then(data => {\n        localStorage.clear();\n        window.location.replace('http://localhost:3000/login');\n      });\n\n    const responseSuccessHandler = response => {\n      return response;\n    };\n    \n    //If an error occurs with the token in logout, then go to login\n    const responseErrorHandler = error => {\n      if (error.response.status === 401) {\n        localStorage.clear();\n        window.location.replace('http://localhost:3000/login');\n      }\n    \n      return Promise.reject(error);\n    }\n    \n    axios.interceptors.response.use(\n      response => responseSuccessHandler(response),\n      error => responseErrorHandler(error)\n    );\n  };\n\n  return (\n    <div>\n      {loading === false && (\n        <>\n          <h1>Are you sure you want to logout?</h1>\n          <input type='button' value='Logout' onClick={handleLogout} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Logout;\n","import axios from 'axios';\r\n\r\n\r\n//Axios global request Headers\r\n//https://github.com/axios/axios#global-axios-defaults\r\n\r\n//development: axios.defaults.baseURL = 'http://127.0.0.1:8000/api/v1';\r\n//axios.defaults.baseURL = 'djminesbackend.respuestadigital.com.ar/api/v1';\r\n\r\n/**\r\n * load games of the logged user from mines server\r\n * @return {games} [] object\r\n */\r\nexport const getGames = () => {\r\n    return axios({\r\n        method: 'get',\r\n        url: 'http://djminesbackend.respuestadigital.com.ar/api/v1/users/games/',\r\n        headers: {\r\n          Authorization: `Token ${localStorage.getItem('token')}`,\r\n          'Content-Type':'application/json'\r\n        },\r\n      })\r\n        .then(response => response.data)\r\n}\r\n\r\n/**\r\n * load a game\r\n * @return {game} object\r\n */\r\n export const getLoggedUser = () => {\r\n    return axios({\r\n        method: 'get',\r\n        url: 'http://djminesbackend.respuestadigital.com.ar/api/v1/users/auth/user/',\r\n        headers: {\r\n          Authorization: `Token ${localStorage.getItem('token')}`,\r\n          'Content-Type':'application/json'\r\n        },        \r\n      })\r\n        .then(response => response.data)\r\n}\r\n\r\n/**\r\n * loag game from mines server\r\n * @param {gameId} number\r\n * @return {game} object\r\n */\r\nexport const getGameFromBackend = ( gameId ) => {\r\n    return axios({\r\n        method: 'get',\r\n        url: `http://djminesbackend.respuestadigital.com.ar/api/v1/users/games/${gameId}`,\r\n        headers: {\r\n          Authorization: `Token ${localStorage.getItem('token')}`,\r\n          'Content-Type':'application/json'\r\n        },\r\n      })\r\n        .then(response => response.data)\r\n}\r\n\r\n/**\r\n * delete game from mines server\r\n * @param {gameId} number\r\n */\r\n export const deleteGameFromBackend = ( gameId ) => {\r\n    return axios({\r\n        method: 'delete',\r\n        url: `http://djminesbackend.respuestadigital.com.ar/api/v1/users/games/${gameId}`,\r\n        headers: {\r\n          Authorization: `Token ${localStorage.getItem('token')}`,\r\n          'Content-Type':'application/json'\r\n        },\r\n      })\r\n}\r\n\r\n/**\r\n * Create game in backend\r\n * @param {newGameData} object\r\n * @return {game} object\r\n */\r\nexport const createGameInBackend = ( newGameData ) => {\r\n    return axios({\r\n        method: 'post',\r\n        url: `http://djminesbackend.respuestadigital.com.ar/api/v1/users/games/`,\r\n        headers: {\r\n          Authorization: `Token ${localStorage.getItem('token')}`,\r\n          'Content-Type':'application/json'\r\n        },\r\n        data: JSON.stringify({\r\n            useremail: newGameData.useremail,\r\n            rows: newGameData.rows,\r\n            columns: newGameData.columns,\r\n            mines: newGameData.mines,\r\n        }),\r\n      })\r\n        .then(response => response.data)\r\n}\r\n/**\r\n * Save state of the game in the mines server\r\n * Return the updated game\r\n * @param {gameId} number\r\n * @param {state} string\r\n * @param {board} array\r\n * @return {game} object\r\n */\r\nexport const saveGameInBackend = (gameId, state, state_board) => {\r\n\r\n    const state_board_json = JSON.stringify(state_board)\r\n    console.log(state_board_json);\r\n    return axios({\r\n        method: 'put',\r\n        url: `http://djminesbackend.respuestadigital.com.ar/api/v1/users/games/${gameId}/`,\r\n        headers: {\r\n          Authorization: `Token ${localStorage.getItem('token')}`,\r\n          'Content-Type':'application/json'\r\n        },\r\n        data: JSON.stringify({\r\n            state,\r\n            state_board: state_board_json\r\n        }),\r\n      })\r\n        .then(response => response.data)\r\n}","/**\r\n * Higher-order function for async/await error handling\r\n * @param {function} fn an async function\r\n * @return {function}\r\n */\r\n\r\n export const catchErrors = fn => {\r\n    return function(...args) {\r\n        return fn( ...args).catch((err) => {\r\n            console.error(err);\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getGames } from '../MinesServer';\r\nimport { deleteGameFromBackend } from '../MinesServer';\r\nimport { catchErrors } from '../utils';\r\nimport {\r\n\tFaTrash,\r\n} from 'react-icons/fa';\r\nconst GameList = ( props ) => {\r\n  const [gamelist, setgamelist] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchData = async () => {\r\n      const gamesFromBackend = await getGames();\r\n      setgamelist(gamesFromBackend);\r\n      setLoading(false);\r\n    }\r\n    catchErrors(fetchData());    \r\n    \r\n  }, [props.propForceUpdate]);\r\n  console.log(gamelist)\r\n  console.log(props.propForceUpdate)\r\n\r\n  const handleDeleteGame = ( gameId) => {\r\n    const deleteGame = async () => {\r\n      const NullDeletedGame = await deleteGameFromBackend( gameId );\r\n      alert('Game deleted')\r\n      props.onGameListChange(); \r\n    }\r\n\r\n    catchErrors(deleteGame());   \r\n  }\r\n\r\n  const PlayViewMessage = (gameState) => {\r\n    if (gameState === 'NOT_STARTED') {\r\n      return 'Play game '\r\n    } else if (gameState === 'STARTED') {\r\n      return 'Resume game '\r\n    } else if (gameState === 'LOST') {\r\n      return 'View lost game '\r\n    } else if (gameState === 'WON') {\r\n      return 'View won game '\r\n    }\r\n   \r\n    return 'Game in invalid state'\r\n  }\r\n  return (\r\n    <div>\r\n      {loading === false && gamelist && (\r\n        <>\r\n          {gamelist.map((game, i) => (\r\n            <div key={game.id}>\r\n              <Link to={`/board/${game.id}`}>\r\n                {`${PlayViewMessage(game.state)} #${game.id} `}\r\n              </Link>\r\n              {`Created on:${game.start_str_ser}. With ${game.rows} rows, ${game.columns} columns, and ${game.mines} mines`}\r\n              <button onClick={()=> handleDeleteGame(game.id)}>\r\n                <FaTrash  className=\"has-text-primary\" />\r\n              </button>\r\n            </div>\r\n        ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameList;\r\n","import { useState }  from 'react';\r\nimport { createGameInBackend } from '../MinesServer';\r\nimport { catchErrors } from '../utils';\r\nconst NewGameForm = (props) => {\r\n    const [formValues, setFormValues] = useState({\r\n        rows: 2,\r\n        columns: 2,\r\n        mines: 2\r\n    });\r\n\r\n    const handleChange = evt => {\r\n        const updateFormValues = {\r\n            ...formValues,\r\n            [evt.target.id]: evt.target.value\r\n        };\r\n\r\n        setFormValues(updateFormValues);\r\n    };\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        if (formValues.mines > (formValues.columns * formValues.rows ) -1) {\r\n            alert(`You have selected too many mines (${formValues.mines}) for a board of ${formValues.rows} X ${formValues.columns} cells`);\r\n        } else {\r\n            createInBackend();\r\n            props.onGameListChange(); \r\n            alert(\"Game created!!\");\r\n        }\r\n\r\n    }\r\n\r\n    const createInBackend = () => {\r\n        let newGameData = {\r\n            useremail: props.userEmail,\r\n            rows: formValues.rows,\r\n            columns: formValues.columns,\r\n            mines: formValues.mines\r\n        };\r\n        const createGame = async () => {\r\n            const createdGame = await createGameInBackend(newGameData);\r\n            console.log('----------------')\r\n            console.log(createdGame);\r\n        }\r\n\r\n        catchErrors(createGame())\r\n    }\r\n\r\n    return (<>\r\n        <p>Customize your next match!</p>\r\n        <form onSubmit={handleSubmit}>\r\n            <label htmlFor='rows'>Rows</label>\r\n            <select id='rows' value= {formValues['rows']} onChange={handleChange}>\r\n\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n                <option>6</option>\r\n                <option>7</option>\r\n                <option>8</option>\r\n                <option>9</option>\r\n            </select>\r\n            <label htmlFor='columns'>Columns</label>\r\n            <select id='columns' value= {formValues['columns']} onChange={handleChange}>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n                <option>6</option>\r\n                <option>7</option>\r\n                <option>8</option>\r\n                <option>9</option>\r\n            </select>\r\n            <label htmlFor='mines'>Mines</label>\r\n            <select id='mines' value= {formValues['mines']} onChange={handleChange}>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n                <option>6</option>\r\n                <option>7</option>\r\n                <option>8</option>\r\n                <option>9</option>\r\n            </select>\r\n            <button>Create new game</button>\r\n        </form>\r\n    </>);\r\n};\r\n\r\nexport default NewGameForm;","import React, { useState, useEffect } from 'react';\nimport GameList from '../components/GamesList';\nimport NewGameForm from '../components/NewGame';\nimport { getLoggedUser } from '../MinesServer';\nimport { catchErrors } from '../utils';\nconst Game = () => {\n  const [userEmail, setUserEmail] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [forceUpdate, setForceUpdate] = useState(0);\n\n  useEffect(() => {\n    if (localStorage.getItem('token') === null) {\n      window.location.replace('http://localhost:3000/login');\n    } else {\n\n      const fetchData = async () => {\n          const LoggedUser = await getLoggedUser( );\n          setUserEmail(LoggedUser.email);\n          setLoading(false);\n      }\n\n      catchErrors(fetchData());      \n\n \n    }\n  }, []);\n\n  const handleGameListChange = () => {\n    setForceUpdate(forceUpdate+1);\n  };\n\n  return (\n    <div>\n      {loading === false && (\n        <>\n          <h1>Games</h1>\n          <NewGameForm userEmail={userEmail} onGameListChange={() => handleGameListChange()} />\n          <h2>Hello {userEmail}! your games:</h2>\n          \n\n          <GameList propForceUpdate={forceUpdate} onGameListChange={() => handleGameListChange()}/>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n","import React from 'react';\r\nimport {\r\n\tFaBomb,\r\n    FaFlag\r\n} from 'react-icons/fa';\r\n\r\nconst Cell = (props) => {\r\n    //console.log(props.cellData.isRevealed)\r\n    // console.log(props)\r\n    const getValue = () => {\r\n        //return ( `(${props.cellData.isRevealed})`)\r\n\r\n        if (!props.cellData.isRevealed){\r\n            return props.cellData.isFlagged ? <FaFlag  className=\"has-text-primary\" /> : null;\r\n        }\r\n        if (props.cellData.isMine) {\r\n            return <FaBomb  className=\"has-text-primary\" />;\r\n        }\r\n        if(props.cellData.nearbyMines === 0 ){\r\n            return null;\r\n        }\r\n        return props.cellData.nearbyMines;\r\n    }\r\n\r\n    let className = \"cell\" + (props.cellData.isRevealed ? \"\" : \" hidden\") + (props.cellData.isMine ? \" is-mine\" : \"\") + (props.cellData.isFlagged ? \" is-flag\" : \"\");\r\n\r\n    return (\r\n        // <div ref=\"cell\" onClick={this.props.onClick} className={className} onContextMenu={this.props.cMenu}>\r\n        //     {this.getValue()} \r\n        // </div>\r\n        // <div onClick={props.onClick} className={className} onContextMenu={props.cMenu}>\r\n        <div className={className} onClick={props.onClick} onContextMenu={props.contextMenu}>\r\n            {getValue()} \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cell;","import { useParams } from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport Cell from '../components/Cell';\r\nimport styled from 'styled-components/macro';\r\nimport { getGameFromBackend, saveGameInBackend } from '../MinesServer';\r\nimport { catchErrors } from '../utils';\r\nconst StyledGame = styled.div`\r\n\r\n    max-width: ${props => (props.columns * 40)}px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 auto;\r\n`\r\n\r\nconst Board = () => {\r\n    const { id } = useParams();\r\n    const [game, setGame] = useState({});\r\n    const [gameData, setGameData] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [forceUpdate, setForceUpdate] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            const gameFromBackend = await getGameFromBackend( id );\r\n            setGame(gameFromBackend);\r\n        }\r\n\r\n        catchErrors(fetchData());\r\n          \r\n    }, [id]);\r\n\r\n\r\n    useEffect(() => {\r\n        const calculateNearbyMines = (board, rows, columns) => {\r\n            let updatedBoard = board;\r\n    \r\n            for (let row= 0; row < rows; row++) {\r\n                for (let column= 0; column < columns; column++) {\r\n                    if (board[row][column].isMine !== true){\r\n                        const nearbyCells = getNearbyCells(row,column, rows, columns, board);\r\n                        \r\n                        let nerbyMines = nearbyCells.reduce( (previousValue , current  ) => {  \r\n                            if (current.isMine) {\r\n                                return previousValue + 1;\r\n                            } else {\r\n                                return previousValue;\r\n                            }\r\n                        }, 0)\r\n                        //not nearby mines found\r\n                        if (nerbyMines ===0) {\r\n                            updatedBoard[row][column].isEmpty = true;\r\n                        }\r\n                        updatedBoard[row][column].nearbyMines = nerbyMines;\r\n                    }\r\n                }\r\n            }\r\n            return (updatedBoard);\r\n        }\r\n\r\n        const initboard = (rows, columns, mines) => {\r\n\r\n            let board= new Array(rows)\r\n    \r\n            for (let row= 0; row < rows; row++) {\r\n                board[row] = new Array(columns)\r\n                for (let column= 0; column < columns; column++) {\r\n                    board[row][column] = {\r\n                        childen_key : `(${row}:${column})`,\r\n                        row,\r\n                        column,\r\n                        isMine: false,\r\n                        nearbyMines: 0,\r\n                        isRevealed: false,\r\n                        isEmpty: false,\r\n                        isFlagged: false,\r\n                    }\r\n                }\r\n            }\r\n            //create mines in the board\r\n            board = createMines(board, rows, columns, mines)\r\n            //calculate nearbyMines for each cell\r\n            board =  calculateNearbyMines(board, rows, columns)\r\n    \r\n            return board;\r\n        };\r\n\r\n        if (game.state === 'NOT_STARTED') {\r\n            const rows = game.rows;\r\n            const columns = game.columns;\r\n            const mines = game.mines\r\n            const newGameData = {\r\n                won: false,\r\n                lost: false,\r\n                board: initboard(rows, columns, mines),\r\n            };\r\n            setGameData(newGameData);\r\n        } else if (game.state === 'STARTED') {\r\n            const newGameData = {\r\n                won: false,\r\n                lost: false,\r\n                board: JSON.parse(game.state_board),\r\n            };\r\n            setGameData(newGameData);    \r\n        } else if (game.state === 'WON') {\r\n            const newGameData = {\r\n                won: true,\r\n                lost: false,\r\n                board: JSON.parse(game.state_board),\r\n            };\r\n            setGameData(newGameData);    \r\n        } else if (game.state === 'LOST') { //LOST\r\n            const newGameData = {\r\n                won: false,\r\n                lost: true,\r\n                board: JSON.parse(game.state_board),\r\n            };\r\n            setGameData(newGameData);   \r\n        } \r\n        setLoading(false);\r\n    },[game]);\r\n\r\n    const createMines = (board, rows, columns, mines) =>{\r\n        let mineRow, mineColumn, minesCreated = 0;\r\n        while (minesCreated < mines) {\r\n            mineRow = Math.floor(Math.random() * rows);\r\n            mineColumn = Math.floor(Math.random() * columns);\r\n            if (!(board[mineRow][mineColumn].isMine)) {\r\n                board[mineRow][mineColumn].isMine = true;\r\n                minesCreated++;\r\n            }\r\n        }\r\n\r\n        return (board);\r\n    }\r\n\r\n    const revealBoard = () => {\r\n        console.log('revealBoard');\r\n        let newGameData = gameData;\r\n        newGameData.board.map((row) => {\r\n            row.map((cell) =>{\r\n                cell.isRevealed = true;\r\n            });\r\n        });\r\n\r\n        setForceUpdate(forceUpdate+1);\r\n        setGameData(newGameData);\r\n    }\r\n\r\n    const revealEmptyCell = (row, column, rows, columns, board) => {\r\n        const nearbyCells = getNearbyCells(row,column, rows, columns, board);\r\n        nearbyCells.map( cell => {\r\n            if (!cell.isRevealed && (cell.isEmpty || !cell.isMine)) {\r\n                board[cell.row][cell.column].isRevealed = true;\r\n                board[cell.row][cell.column].isFlagged = false;\r\n                if (cell.isEmpty) {\r\n                    revealEmptyCell(cell.row, cell.column, rows, columns, board);\r\n                }\r\n            }\r\n        })\r\n        return board;\r\n    }\r\n\r\n    const getNearbyCells = (row,column, rows, columns, board) => {\r\n        const nearbyCells = [];\r\n        //up\r\n        if ( row > 0) nearbyCells.push(board[row-1][column]);\r\n        //down\r\n        if (row < rows - 1) {nearbyCells.push(board[row+1][column]);};\r\n        //left\r\n        if (column > 0 ) {nearbyCells.push(board[row][column - 1]);};\r\n        //right\r\n        if (column < columns - 1) {nearbyCells.push(board[row][column + 1]);};\r\n        // top left\r\n        if ( row > 0 && column > 0) {nearbyCells.push(board[row - 1][column - 1]);};\r\n        // top right\r\n        if ( row > 0 && column < columns - 1) {nearbyCells.push(board[row - 1][column + 1]);};\r\n        // bottom left\r\n        if ( row < rows - 1 && column > 0) {nearbyCells.push(board[row + 1][column - 1]);};\r\n        // bottom right\r\n        \r\n        if ( row < rows - 1  && column < columns - 1) {\r\n            nearbyCells.push(board[row + 1][column + 1]);\r\n        };\r\n        return (nearbyCells);\r\n    }\r\n\r\n\r\n    const boardToArrayOfCells = (board) => {\r\n            let cellsArray = [];\r\n\r\n            board.map(row => {\r\n                row.map((cell) => {\r\n                    if (!cell.isRevealed) {\r\n                        cellsArray.push(cell);\r\n                    }\r\n                });\r\n            });\r\n\r\n            return cellsArray\r\n    }\r\n\r\n    const numberOfHiddenCells = (board) => {\r\n        //convert the board toa one-dimensional array\r\n        let cellsArray = boardToArrayOfCells(board);\r\n        let number = cellsArray.reduce( (previousValue , current  ) => {  \r\n            if (!current.isRevealed) {\r\n                return previousValue + 1;\r\n            } else {\r\n                return previousValue;\r\n            }\r\n        }, 0)\r\n        return number;\r\n    }\r\n\r\n    const numberOfFlaggedCells = (board) => {\r\n        //convert the board toa one-dimensional array\r\n        let cellsArray = boardToArrayOfCells(board);\r\n        let number = cellsArray.reduce( (previousValue , current  ) => {  \r\n            if (current.isFlagged) {\r\n                return previousValue + 1;\r\n            } else {\r\n                return previousValue;\r\n            }\r\n        }, 0)\r\n        return number;\r\n    }\r\n\r\n\r\n    const handleCellClick = (row, column) => {\r\n        const rows = game.rows;\r\n        const columns = game.columns;\r\n        const mines = game.mines;\r\n        let won = false; \r\n        let lost = false;\r\n        //if revealed, do nothing\r\n        if (gameData.board[row][column].isRevealed) return null;\r\n\r\n        //if is mine. lost the game\r\n        if (gameData.board[row][column].isMine) {\r\n            revealBoard();\r\n            alert(\"Game over\");\r\n            lost = true;\r\n        }\r\n\r\n        \r\n        let newGameData = gameData; \r\n        newGameData.board[row][column].isFlagged = false;\r\n        newGameData.board[row][column].isRevealed = true;\r\n\r\n        if (newGameData.board[row][column].isEmpty) {\r\n            newGameData.board = revealEmptyCell(row, column,rows, columns, newGameData.board);\r\n        }\r\n\r\n        if (numberOfHiddenCells(newGameData.board) === mines) {\r\n            won = true;\r\n            revealBoard();\r\n            alert(\"You Win\");\r\n        }\r\n\r\n        newGameData.won = won;\r\n        newGameData.lost = lost;\r\n        setGameData(newGameData);\r\n        saveOnBackend();\r\n        setForceUpdate(forceUpdate+1);\r\n\r\n    }\r\n\r\n    const handleContextMenu = (evt,row, column) => {\r\n        evt.preventDefault();\r\n        console.log('handleContextMenu');\r\n        const mines = game.mines;\r\n        let newGameData = gameData;\r\n        let won = false\r\n\r\n\r\n        if (newGameData.board[row][column].isRevealed) return null;\r\n\r\n        if (newGameData.board[row][column].isFlagged) {\r\n            newGameData.board[row][column].isFlagged = false \r\n        } else {\r\n            newGameData.board[row][column].isFlagged = true \r\n        }\r\n        //if number of flags is equalt to the number of mines\r\n        if (numberOfFlaggedCells(newGameData.board) === mines) {\r\n            const mineArray = boardToArrayOfCells(newGameData.board).map( cell => {\r\n                if (cell.isMine) return cell;\r\n                })\r\n            const FlagArray = boardToArrayOfCells(newGameData.board).map( cell => {\r\n                if (cell.isFlagged) return cell;\r\n                })     \r\n            \r\n            won = ( JSON.stringify(mineArray) === JSON.stringify(FlagArray));\r\n            if (won) {\r\n                revealBoard();\r\n                alert(\"You win\");\r\n            }\r\n        }\r\n        newGameData.won = won;   \r\n        setGameData(newGameData);\r\n        saveOnBackend();\r\n        setForceUpdate(forceUpdate+1);\r\n    }\r\n\r\n    \r\n    const DrawBoard = (board, rows, propForceUpdate) => {\r\n\r\n        console.log(`drawboard (${propForceUpdate})`);\r\n        console.log(board)\r\n        return board.map((datarow) => {\r\n            return datarow.map((cellData) => {\r\n                return (\r\n                    <div key={`${cellData.childen_key}`}>\r\n                        <Cell\r\n                            cellData={cellData} \r\n                            revealed={cellData.isRevealed} \r\n                            onClick={()=> handleCellClick(cellData.row, cellData.column)}\r\n                            contextMenu={(evt)=> handleContextMenu(evt, cellData.row, cellData.column)}\r\n                        />\r\n                    </div>);\r\n            })\r\n        });\r\n\r\n    };\r\n\r\n    const saveOnBackend = () => {\r\n        let newGameState = ''\r\n        if (gameData.won)  {\r\n            newGameState = 'WON'\r\n        } else if (gameData.lost) {\r\n            newGameState = 'LOST'\r\n        } else {\r\n            newGameState = 'STARTED'\r\n        }\r\n\r\n        const saveData = async () => {\r\n            const savedData = await saveGameInBackend(game.id, newGameState, gameData.board);\r\n            console.log(savedData);\r\n        }\r\n\r\n        catchErrors(saveData())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          {loading === false && (\r\n            <>\r\n                {\r\n                    gameData && (\r\n                        <StyledGame columns={game.columns}>\r\n                            <div className=\"board\">\r\n                            <div className=\"game-info\">\r\n                                <span className=\"info\">Game #{game.id} mines: {game.mines}</span><br />\r\n                                <span className=\"info\">{gameData.won ? \"You Win!\" : \"\"}</span>\r\n                                <span className=\"info\">{gameData.lost ? \"You Lose!\" : \"\"}</span>\r\n                            </div>\r\n                            {\r\n                                gameData && gameData.board && (\r\n                                    DrawBoard(gameData.board, game.rows, forceUpdate)\r\n                                )\r\n                            }\r\n                            </div>  \r\n\r\n                        </StyledGame>                     \r\n                    )\r\n\r\n\r\n                        \r\n                }\r\n            </>\r\n          )}\r\n        </div>\r\n      );\r\n};\r\n\r\nexport default Board;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Login from './pages/Login'\nimport Signup from './pages/Signup';\nimport Logout from './pages/Logout';\nimport Game from './pages/Game';\nimport Board from './pages/Board'\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path='/login' exact>\n             <Login />\n          </Route>\n\n          <Route path='/signup' exact>\n             <Signup />\n          </Route>\n          <Route path='/logout' exact>\n             <Logout />\n          </Route>\n          <Route path='/game' exact>\n            <Game />\n          </Route>\n          <Route path='/board/:id'>\n            <Board />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}